<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.1208.1036                               -->
<workbook source-build='2020.3.4 (20203.20.1208.1036)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='1800.0'>
        <calculation class='tableau' formula='1800.' />
        <range granularity='2.0' min='900.0' />
      </column>
      <column caption='Start Station Code Parameter' datatype='real' name='[Start Station Code Parameter]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
        <range max='100.0' min='1.0' />
      </column>
    </datasource>
    <datasource caption='trips+ (bixi)' inline='true' name='federated.12nejot0f853no1f1ygbh08yx72k' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0nbtzh20qk1fzt1fkcbzv05qixhe'>
            <connection class='mysql' dbname='bixi' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[trips].[start_station_code]' />
              <expression op='[stations].[code]' />
            </expression>
          </clause>
          <relation connection='mysql.0nbtzh20qk1fzt1fkcbzv05qixhe' name='trips' table='[trips]' type='table' />
          <relation connection='mysql.0nbtzh20qk1fzt1fkcbzv05qixhe' name='stations' table='[stations]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[trips].[start_station_code]' />
              <expression op='[stations].[code]' />
            </expression>
          </clause>
          <relation connection='mysql.0nbtzh20qk1fzt1fkcbzv05qixhe' name='trips' table='[trips]' type='table' />
          <relation connection='mysql.0nbtzh20qk1fzt1fkcbzv05qixhe' name='stations' table='[stations]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>19</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_82707B6B202C45D78B28FB16CB5129C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_82707B6B202C45D78B28FB16CB5129C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[start_station_code]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>start_station_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_82707B6B202C45D78B28FB16CB5129C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_82707B6B202C45D78B28FB16CB5129C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_station_code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[end_station_code]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>end_station_code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_82707B6B202C45D78B28FB16CB5129C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_sec</remote-name>
            <remote-type>3</remote-type>
            <local-name>[duration_sec]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>duration_sec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_82707B6B202C45D78B28FB16CB5129C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_member</remote-name>
            <remote-type>16</remote-type>
            <local-name>[is_member]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>is_member</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_82707B6B202C45D78B28FB16CB5129C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_82707B6B202C45D78B28FB16CB5129C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_82707B6B202C45D78B28FB16CB5129C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_82707B6B202C45D78B28FB16CB5129C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_82707B6B202C45D78B28FB16CB5129C1]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_82707B6B202C45D78B28FB16CB5129C1]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Code' datatype='integer' name='[code]' role='dimension' type='ordinal' />
      <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
      <column caption='End Date' datatype='datetime' name='[end_date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='trips' id='trips_82707B6B202C45D78B28FB16CB5129C1'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[trips].[start_station_code]' />
                    <expression op='[stations].[code]' />
                  </expression>
                </clause>
                <relation connection='mysql.0nbtzh20qk1fzt1fkcbzv05qixhe' name='trips' table='[trips]' type='table' />
                <relation connection='mysql.0nbtzh20qk1fzt1fkcbzv05qixhe' name='stations' table='[stations]' type='table' />
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='stations+ (bixi)' inline='true' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0cnsan804cqyyd10od4c90oq2czw'>
            <connection class='mysql' dbname='bixi' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[trips].[start_station_code]' />
              <expression op='[stations].[code]' />
            </expression>
          </clause>
          <relation connection='mysql.0cnsan804cqyyd10od4c90oq2czw' name='trips' table='[trips]' type='table' />
          <relation connection='mysql.0cnsan804cqyyd10od4c90oq2czw' name='stations' table='[stations]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation join='inner' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[trips].[start_station_code]' />
              <expression op='[stations].[code]' />
            </expression>
          </clause>
          <relation connection='mysql.0cnsan804cqyyd10od4c90oq2czw' name='trips' table='[trips]' type='table' />
          <relation connection='mysql.0cnsan804cqyyd10od4c90oq2czw' name='stations' table='[stations]' type='table' />
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>19</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_8EF9C24802D84443B2C8F6D946604CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[start_date]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>start_date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_8EF9C24802D84443B2C8F6D946604CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start_station_code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[start_station_code]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>start_station_code</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_8EF9C24802D84443B2C8F6D946604CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[end_date]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>end_date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_8EF9C24802D84443B2C8F6D946604CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end_station_code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[end_station_code]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>end_station_code</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_8EF9C24802D84443B2C8F6D946604CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>duration_sec</remote-name>
            <remote-type>3</remote-type>
            <local-name>[duration_sec]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>duration_sec</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_8EF9C24802D84443B2C8F6D946604CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>is_member</remote-name>
            <remote-type>16</remote-type>
            <local-name>[is_member]</local-name>
            <parent-name>[trips]</parent-name>
            <remote-alias>is_member</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>3</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TINYINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_STINYINT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_8EF9C24802D84443B2C8F6D946604CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>code</remote-name>
            <remote-type>19</remote-type>
            <local-name>[code]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>code</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_ULONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_8EF9C24802D84443B2C8F6D946604CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[name]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>name</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>false</contains-null>
            <collation charset='290' flag='1' name='LROOT_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_8EF9C24802D84443B2C8F6D946604CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>latitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[latitude]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>latitude</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_8EF9C24802D84443B2C8F6D946604CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>longitude</remote-name>
            <remote-type>4</remote-type>
            <local-name>[longitude]</local-name>
            <parent-name>[stations]</parent-name>
            <remote-alias>longitude</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>6</precision>
            <contains-null>false</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_REAL&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_FLOAT&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[trips_8EF9C24802D84443B2C8F6D946604CD2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Minutes' datatype='real' name='[Calculation_260364359326175234]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[duration_sec]/60' />
      </column>
      <column caption='Short Trip Group ' datatype='real' name='[Calculation_260364359682379782]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_974184899951222804] * 2.99' />
      </column>
      <column caption='Medium Trip Group ' datatype='real' name='[Calculation_260364359683039239]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_974184899951222804] * 4.79' />
      </column>
      <column caption='Long Trip Group ' datatype='real' name='[Calculation_260364359683362824]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_974184899951222804] * 7.79' />
      </column>
      <column caption='Member Monthly Generated Rvenue' datatype='integer' name='[Calculation_260364359708655626]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_974184899955027989] * 34' />
      </column>
      <column caption='One Way Trip' datatype='real' name='[Calculation_260364359710613515]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='100 - [Calculation_974184899658866706]' />
      </column>
      <column caption='% of Members Vs Non-Members' datatype='real' name='[Calculation_974184899639693322]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([is_member])/ COUNT([__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]) * 100' />
      </column>
      <column caption='Round Trip Validation' datatype='integer' name='[Calculation_974184899655544848]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='IF [start_station_code] = [end_station_code] THEN 1 ELSE 0 END' />
      </column>
      <column caption='Round Trip %' datatype='real' name='[Calculation_974184899658866706]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Calculation_974184899655544848])/ COUNT([__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]) * 100' />
      </column>
      <column caption='Is Not a Member' datatype='integer' name='[Calculation_974184899951222804]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([is_member]) - SUM([is_member])' />
      </column>
      <column caption='Is a Member' datatype='integer' name='[Calculation_974184899955027989]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT([is_member])-[Calculation_974184899951222804]' />
      </column>
      <column aggregation='None' caption='Duration Sec (bin)' datatype='integer' name='[Duration Sec (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='1' formula='[duration_sec]' peg='0' size='60' />
      </column>
      <column aggregation='None' caption='Start Station Code (bin)' datatype='integer' name='[Start Station Code (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[start_station_code]' peg='0' size-parameter='[Parameters].[Start Station Code Parameter]' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]' role='measure' type='quantitative' />
      <column aggregation='Sum' caption='Code' datatype='integer' name='[code]' role='dimension' type='ordinal' />
      <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
      <column caption='End Date' datatype='datetime' name='[end_date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
      <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
      <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
      <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
      <column-instance column='[__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[latitude]' derivation='Avg' name='[avg:latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[longitude]' derivation='Avg' name='[avg:longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start_date]' derivation='Hour' name='[hr:start_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
      <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_260364359326175234]' derivation='Sum' name='[sum:Calculation_260364359326175234:qk]' pivot='key' type='quantitative' />
      <column-instance column='[duration_sec]' derivation='Sum' name='[sum:duration_sec:qk]' pivot='key' type='quantitative' />
      <column-instance column='[is_member]' derivation='Sum' name='[sum:is_member:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start_date]' derivation='Month-Trunc' name='[tmn:start_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Calculation_260364359682379782]' derivation='User' name='[usr:Calculation_260364359682379782:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_260364359683039239]' derivation='User' name='[usr:Calculation_260364359683039239:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_260364359683362824]' derivation='User' name='[usr:Calculation_260364359683362824:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_974184899639693322]' derivation='User' name='[usr:Calculation_974184899639693322:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_974184899658866706]' derivation='User' name='[usr:Calculation_974184899658866706:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_974184899951222804]' derivation='User' name='[usr:Calculation_974184899951222804:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_974184899955027989]' derivation='User' name='[usr:Calculation_974184899955027989:qk]' pivot='key' type='quantitative' />
      <column-instance column='[start_date]' derivation='Weekday' name='[wd:start_date:ok]' pivot='key' type='ordinal' />
      <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (HOUR(Start Date),WEEKDAY(Start Date))' hidden='true' name='[Action (HOUR(Start Date),WEEKDAY(Start Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[hr:start_date:ok]' />
          <groupfilter function='level-members' level='[wd:start_date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (YEAR(Start Date),MONTH(Start Date))' hidden='true' name='[Action (YEAR(Start Date),MONTH(Start Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[yr:start_date:ok]' />
          <groupfilter function='level-members' level='[tmn:start_date:ok]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Latitude,Longitude)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:latitude:qk]' />
          <groupfilter function='level-members' level='[none:longitude:qk]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='0.913396' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' parameter-percentage='0.0866035' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[avg:longitude:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899639693322:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[sum:is_member:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899955027989:qk]&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359682379782:qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359683039239:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[avg:latitude:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899951222804:qk]&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359683362824:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899658866706:qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[sum:Calculation_260364359326175234:qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[sum:duration_sec:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:start_date:ok]' type='palette'>
            <map to='#76b7b2'>
              <bucket>2016</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2017</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:name:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;6e avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Alexandre-DeSève / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bennett / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Boyer / Bélanger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Chabot / St-Zotique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clark / Rachel&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;de Bordeaux / Jean-Talon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;de Gaspé / St-Viateur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;de la Roche / Everett&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;des Érables / Gauthier&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;du Square Ahmerst / Wolfe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fleury / Lajeunesse&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Girouard / de Terrebonne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hôpital général juif (de la Côte Ste-Catherine / Légaré)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jeanne-Mance / St-Viateur&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lincoln / du Fort&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Marché Maisonneuve&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Metcalfe / du Square Dorchester&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Métro Outremont (Wiseman / Van Horne)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montcalm / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Parc du Pélican (2e avenue / St-Joseph)&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ross / de l&apos;Église&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St-André / Duluth&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;St-Dominique / St-Zotique&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Ste-Famille / des Pins&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Villeneuve / de l&apos;Hôtel-de-Ville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19e avenue / St-Zotique&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;1ère avenue / Masson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Beatty / de Verdun&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Cartier / St-Joseph&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;CHSLD St-Michel (Jarry / 8e avenue)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;d&apos;Orléans / Masson&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;de Chateaubriand / Beaubien&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;de la Commune / King&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;de Marseille / Viau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;du Mont-Royal / Augustin-Frigon&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Émile-Duployé / Sherbrooke&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gascon / de Rouen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hélène-Baillargeon / St-Denis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hutchison/ Prince-Arthur&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Le Caron / Marc-Sauvalle &quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lucien L&apos;Allier / St-Jacques&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;McEachran / Van Horne&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Métro Joliette  (Joliette / Hochelaga)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Métro St-Michel (Shaughnessy / St-Michel)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Omer-Lavallée / du Midway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Peel / avenue des Canadiens de Montréal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rachel / de Brébeuf&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sherbrooke / Frontenac&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St-Cuthbert / St-Urbain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;St-Urbain / René-Lévesque&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;University / des Pins&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;35e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;3e avenue / Dandurand&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bel Air / St-Antoine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bloomfield / Van Horne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cathcart / Union&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Clark / Fleury&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Darling / Sherbrooke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;de Gaspé / de Liège&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;de la Gauchetière / Robert-Bourassa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;de Repentigny / Sherbrooke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;du Parc-La Fontaine / Duluth&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Fabre / St-Zotique&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gauthier / Papineau&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Henri-Julien / Villeray&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jardin Botanique (Pie-IX / Sherbrooke)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mansfield / Sherbrooke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mentana / Marie-Anne&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Métro Longueuil - Université de Sherbrooke&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Milton / du Parc&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ottawa / St-Thomas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Rivard / Rachel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Square St-Louis&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;St-Dominique / Jean-Talon&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ste-Catherine / Labelle&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Victoria / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;9e avenue / Dandurand&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Argyle / Bannantyne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Berri / Sherbrooke&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Boyer / St-Zotique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chambord / Laurier&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Complexe sportif Claude-Robillard (Émile-Journault)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;de Bordeaux / Sherbrooke&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;de l&apos;Église / Bannantyne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;de Lanaudière / Bélanger&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Desjardins / Hochelaga&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Dunlop / Van Horne&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fullum / Gilford&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Boulevard / Sherbrooke&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hôtel-de-Ville (du Champs-de-Mars / Gosford)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Ronde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Logan / de Champlain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Marmier / St-Denis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Métro Bonaventure (de la Gauchetière / Mansfield)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Métro Pie-IX (Pierre-de-Coubertin / Pie-IX)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Napoléon /  St-Dominique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Parc Père-Marquette (Chambord / Rosemont)&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;President-Kennedy / Robert Bourassa&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Roy / St-Christophe&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St-André / St-Antoine&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;St-Jacques / St-Laurent&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Terrasse Mercure / Fullum&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Waverly / Fairmount&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Alma / Beaubien&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Basile-Routhier / Gouin&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Benny / de Monkland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Berlioz / de l&apos;Île des Soeurs&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Boyer / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Casino de Montréal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Chambord / Beaubien&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;CHSLD Éloria-Lepage (de la Pépinière / de Marseille)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clark / St-Viateur&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;de Bordeaux / Marie-Anne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;de Hampton / de Monkland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;de la Commune / Place Jacques-Cartier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;de la Roche / Fleury&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;des Érables / Rachel&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Duluth / de l&apos;Esplanade&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Fortune / Wellington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gare Canora&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Godin / Bannantyne&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Hôpital Maisonneuve-Rosemont (Rosemont / Chatelain)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jacques-Le Ber / de la Pointe Nord&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Jogues / Allard&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LaSalle / 4e avenue&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;LaSalle / Sénécal&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lincoln / Lambert Closse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Marcil / Sherbrooke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Metcalfe / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Métro Angrignon&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Métro Jean-Drapeau&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Métro Papineau (Cartier / Ste-Catherine)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mozart / St-Laurent&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Parc J.-Arthur-Champagne (de Chambly / du Mont-Royal)&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Parc Plage&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Place du Commerce&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pontiac / Gilford&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Quai de la navette fluviale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St-André / Laurier&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;St-Germain / Hochelaga&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ste-Famille / Sherbrooke&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Villeneuve / du Parc&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;4e avenue / Masson&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Alexandra / Jean Talon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bélanger / St-Denis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bourbonnière / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Chabot / de Bellechasse&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clark / Guilbault&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Davaar / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;de Gaspé / Fairmount&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;de la Montagne / Sherbrooke&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;de St-Vallier / St-Zotique&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;du Parc-La Fontaine / Roy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Faillon / St-Denis&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Gauvin / Notre-Dame&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hillside / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jean-Brillant / McKenna&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mansfield / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Messier / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Métro Lucien-L&apos;Allier (Lucien l&apos;Allier / Argyle)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Milton / Durocher&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ottawa / William&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Place Jean-Paul Riopelle (Viger / de Bleury)&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Robin / de la Visitation&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Square Victoria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;St-Dominique / Maguire&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Ste-Catherine / McGill College&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Victoria Hall&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;16e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Basin / Richmond&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Berri / Jean-Talon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cartier / Masson&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;CHSLD Benjamin-Victor-Rousselot (Dickson / Sherbrooke)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cypress / Peel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;de Chambly / Rachel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;de Maisonneuve / Mansfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Drummond / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ellendale / de la Côte-des-Neiges&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Garnier / St-Joseph&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hamel / Sauvé&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hutchison / Sherbrooke&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Laval / Rachel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louis-Hébert / St-Zotique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Marquette / St-Grégoire&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Métro Mont-Royal (Rivard / du Mont-Royal)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Métro Sauvé (Berri / Sauvé)&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Notre-Dame / St-Gabriel&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Parthenais / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Queen / Wellington&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sanguinet / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St-Charles / Sauvé&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;St-Urbain / Beaubien&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Union / President-Kennedy&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wolfe / René-Lévesque&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;1ère avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;26e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Beaucourt / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Berri / St-Grégoire&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Casgrain / de Bellechasse&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;d&apos;Oxford / de Monkland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;de Clifton / Sherbrooke&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;de la Commune / McGill&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;de Mentana / Laurier&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;du Mont-Royal / Clark&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Émile-Journault / de Chateaubriand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gascon / Rachel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Henri-Julien / de Castelnau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Island / Centre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Laurier / 15e avenue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mackay / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;McGill / des Récollets&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Métro Langelier (Sherbrooke / Langelier)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Métro Verdun (Willibrord / de Verdun)&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ontario / du Havre&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pierre-de-Coubertin / Aird&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Regina / de Verdun&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Square Phillips&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St-Denis / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;St-Zotique / 39e avenue&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;University / Prince-Arthur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;15e avenue / Dandurand&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Aylwin / Ontario&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Berri / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cartier / Bélanger&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chauveau / de l&apos;Assomption&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Crescent / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;de Bullion / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Roy&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;de Maisonneuve / Aylmer&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Drolet / Laurier&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Édouard-Montpetit (Université de Montréal)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gauthier / De Lorimier&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Guizot / St-Laurent&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hutchison / Edouard Charles&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Laporte / St-Antoine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louis-Hébert / Belllechasse&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Marquette / Laurier&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Métro Crémazie (Crémazie / Lajeunesse)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Métro Préfontaine (Moreau / Hochelaga)&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Notre-Dame / de la Montagne&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Parthenais / Mont-Royal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rouen / Fullum&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sanguinet / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St-Charles / Charlotte&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;St-Mathieu /Ste-Catherine&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tupper / Atwater&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Wilderton  / Van Horne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;5e avenue / Bannantyne&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Alexandra / Waverly&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Belmont / du Beaver Hall&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bourgeoys / Favard&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Chabot / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Clark / Laurier&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;de Bellechasse / de St-Vallier&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;de Gaspé / Jarry&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;de la Roche /  de Bellechasse&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;de Vendôme / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;du Président-Kennedy / McGill College&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Faillon / St-Hubert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Georges-Vanier / Notre-Dame&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hochelaga / Chapleau&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jeanne d&apos;Arc / Ontario&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Leman / de Chateaubriand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marché Atwater&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Messier / Hochelaga&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Milton / University&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palm / St-Remi&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Place Longueuil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rockland / Lajoie&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St-Alexandre / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;St-Dominique / Rachel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Ste-Catherine / St-Denis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Viger / Jeanne Mance&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;10e avenue / Masson&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Atwater / Sherbrooke&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bernard / Clark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Briand / le Caron&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Champagneur / Jean-Talon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congres&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;de Bordeaux /Gilford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;de l&apos;Église / de Verdun&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;de Lanaudière / Gilford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dézéry / Ontario&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Durocher / Bernard&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fullum / Jean Langlois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Trunk / Hibernia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hudson / de Kent&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lajeunesse / de Castelnau&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Logan / Fullum&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Marquette / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Métro Cadillac (Sherbrooke / de Cadillac)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Métro Place St-Henri (St-Ferdinand / St-Jacques)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Natatorium (LaSalle / Rolland)&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Plessis / René-Lévesque&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Prince-Arthur / du Parc&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Roy / St-Denis&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St-André / St-Grégoire&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;St-Jacques / St-Pierre&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tolhurst / Fleury&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Waverly / St-Zotique&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;10e Avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Augustin-Cantin / Shearer&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bernard / Jeanne-Mance&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Calixa-Lavallée / Rachel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chapleau / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Côte St-Antoine / Clarke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;de Brébeuf / Laurier&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;de l&apos;Esplanade / Fairmount&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;de Lanaudière / Marie-Anne&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dorion / Ontario&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Duvernay / Charlevoix&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fullum / Sherbrooke &quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greene / Workman&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Hutchison / Beaubien&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lajeunesse / Villeray (place Tapéo)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Louis Hémon / Rosemont&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Marquette / Fleury&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Métro Charlevoix (Centre / Charlevoix)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Métro Place-d&apos;Armes (Viger / St-Urbain)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nazareth / William&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Parc Rosemont (Dandurand / d&apos;Iberville)&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Prince-Arthur / St-Urbain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Roy / St-Laurent&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St-André / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;St-Marc / Sherbrooke&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Towers / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Waverly / Van Horne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;15e avenue / Masson&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Basile-Routhier / Chabanel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Berri / Gilford&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cartier / Marie-Anne&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chomedey / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Crescent / René-Lévesque&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;de Bullion / St-Joseph&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;de l&apos;Hôtel-de-Ville / Sherbrooke&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;de Maisonneuve / Greene&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Drolet / St-Zotique&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Édouard-Montpetit / Stirling&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Garnier / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guy / Notre-Dame&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hutchison / Fairmount&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Larivière / de Lorimier&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Louis-Hébert / Jean-Talon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Marquette / Rachel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Métro Georges-Vanier (St-Antoine / Canning)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Métro Rosemont (Rosemont / de St-Vallier)&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Notre-Dame / Peel&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Parthenais / St-Joseph&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Queen / Ottawa&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sanguinet / Ontario&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St-Charles / Montarville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;St-Nicolas / Place d&apos;Youville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tupper / du Fort&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wilson / Sherbrooke&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;16e avenue / St-Joseph&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;18e avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Berri / Rachel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cartier / Rosemont&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Clark / de Liège&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;d&apos;Orléans / Hochelaga&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;de Champlain / Ontario&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;de la Commune / Berri&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;de Maisonneuve / Robert-Bourassa&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Drummond / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elsdale / Louis-Hébert&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Gary Carter / St-Laurent&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hamilton / Jolicoeur&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hutchison / Van Horne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;LaSalle / Crawford&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Louis-Hémon / Villeray&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Marquette / Villeray&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Métro Jolicoeur (Drake / de Sève)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Métro St-Laurent (de Maisonneuve / St-Laurent)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Notre-Dame-de-Grâce / Décarie&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Paul Boutet / des Regrattiers&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Quesnel / Vinet&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Shearer / Centre&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St-Charles / St-Sylvestre&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;St-Urbain / de la Gauchetière&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Union / René-Lévesque&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Wolfe / Robin&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;7e avenue / St-Joseph&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Angus (Molson / William-Tremblay)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Benny Crescent / Benny&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Boyer / Jean-Talon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chambord / Bélanger&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Collège Édouard-Montpetit&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;de Bordeaux / Masson&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;de Kent / de la Côte-des-Neiges&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;de la Roche / St-Joseph&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;des Seigneurs / Workman&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Duluth / St-Denis&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Francis / Fleury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gordon / Wellington&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Hôpital Santa Cabrini (St-Zotique / Jeanne-Jugan)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Joliette / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lionel-Groulx / George-Vanier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Marie-Anne / de la Roche&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Métro Acadie (de l&apos;Acadie / Beaumont)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Métro Parc  (Ogilvy / Hutchison)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Muray / Notre-Dame&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Parc Jeanne Mance (monument à sir George-Étienne Cartier)&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poupart / Ontario&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rousselot / Jarry&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St-André / Ontario&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;St-Hubert / Rachel&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Stuart / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Villeneuve / St-Laurent&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;5e avenue / de Verdun&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Alexandre-de-Sève / la Fontaine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Belmore / Sherbrooke&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boyer / Beaubien&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Chabot / Everett&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clark / Prince-Arthur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;de Bordeaux / Beaubien&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;de Gaspé / Marmier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;de la Roche / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;des Érables / Bélanger&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;du Rosaire / St-Hubert&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairmount / St-Dominique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gilford / de Brébeuf&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hogan / Ontario&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Jeanne Mance / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lespérance / de Rouen&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marché Jean-Talon (Henri-Julien / Jean-Talon)&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Metcalfe / de Maisonneuve&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Molson / Beaubien&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Papineau / René-Lévesque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Plessis / Ontario&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ropery / Augustin-Cantin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St-André / Cherrier&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;St-Dominique / St-Viateur&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ste-Catherine / Ste-Élisabeth&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ville-Marie / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;1ère  avenue /St-Zotique&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;28e avenue / Rosemont&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Beaudry / Ontario&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bishop / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Casgrain / Mozart&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dandurand / de Lorimier&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;de Darlington / de la Côte-Ste-Catherine&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;de Monkland / Girouard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;du Mont-Royal / du Parc&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ernest-Gendreau / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Gatineau / Swail&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Henri-Julien / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jacques-Casault / Christophe-Colomb&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Laurier / de Bordeaux&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Maguire / Henri-Julien&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;McGill / Place d&apos;Youville&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Métro Lasalle (de Rushbrooke / Caisse)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Métro Villa-Maria (Décarie / de Monkland)&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ontario / Sicard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pierre-de-Coubertin / Louis-Veuillot&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Resther / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Square Sir-Georges-Étienne-Cartier / Léa Roback&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St-Dominique / Bernard&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;St-Zotique / Clark&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Vallières / St-Laurent&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;12e avenue / St-Zotique&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Aylmer / Prince-Arthur&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Berri / Cherrier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Calixa-Lavallée / Sherbrooke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlevoix / Lionel-Groulx&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cote St-Paul / St-Ambroise&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;de Brébeuf / St-Grégoire&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;de l&apos;Esplanade / Laurier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;de Liège / Lajeunesse&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Drolet / Beaubien&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Eadie / Dubois&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Fullum / St-Joseph&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guizot / St-Denis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hutchison / des Pins&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lambert-Closse / Tupper&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Louis-Hébert / Bélanger&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Marquette / Jean-Talon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Métro Côte-des-Neiges (Lacombe / de la Côte-des-Neiges)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Métro Place-des-Arts (de Maisonneuve / de Bleury)&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Notre-Dame / Chatham&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Park Row O / Sherbrooke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Prince-Arthur / Ste-Famille&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ryde / Charlevoix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St-Antoine / St-François-Xavier&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;St-Mathieu / Sherbrooke&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Trans Island / Queen-Mary&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;West Broadway / Sherbrooke&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;8e avenue / Beaubien&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann / William&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bercy / Ontario&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Boyer / Rosemont&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Chambord / Jean-Talon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Coloniale / du Mont-Royal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;de Bordeaux / Rachel&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;de Kent / Victoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;de la Salle / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Desjardins / de Rouen&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Duluth / St-Laurent&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;François-Perrault / L.-O.-David&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gounod / St-Denis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hôtel-de-Ville 2 (du Champs-de-Mars / Gosford)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Joseph-Manceau / René-Lévesque&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Logan / d&apos;Iberville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Marie-Anne / St-Hubert&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Métro Monk (Allard / Beaulieu)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Métro Peel (de Maisonneuve / Stanley)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Murray / William&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Parc Outremont (Bloomfield / Elmwood)&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Poupart / Ste-Catherine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rousselot / Villeray&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St-André / Robin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;St-Jacques / Gauvin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Terrasse Guindon / Fullum&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Villeneuve / St-Urbain&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;2e avenue / Wellington&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;30e avenue / St-Zotique&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beaudry / Sherbrooke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bloomfield / Bernard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;City Councillors / du President-Kennedy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Clark / Evans&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dandurand / Papineau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;de Gaspé / Dante&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;de la Commune / St-Sulpice&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;de Montmorency / Richardson&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;du Mont-Royal / Vincent-d&apos;Indy&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Fabre / Beaubien&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Henri-Julien / Jarry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laval / Duluth&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mansfield / René-Lévesque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;McKenna / Édouard-Montpetit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Métro Laurier (Rivard / Laurier)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Milton / Clark&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ontario / Viau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Place de la paix (Pl. du marché / St-Dominique)&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Resther / St-Joseph&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Square Sir-Georges-Etienne-Cartier / Ste-Émilie&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;St-Dominique / Gounod&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ste-Catherine / Dézéry&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Valois / Ontario&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[hr:start_date:ok]' type='palette'>
            <map to='#76b7b2'>
              <bucket>2016</bucket>
            </map>
            <map to='#e15759'>
              <bucket>2017</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Canada&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Start Station Code Parameter' datatype='real' name='[Start Station Code Parameter]' param-domain-type='range' role='measure' type='quantitative' value='1.0'>
          <calculation class='tableau' formula='1.0' />
          <range max='100.0' min='1.0' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='trips' id='trips_8EF9C24802D84443B2C8F6D946604CD2'>
            <properties context=''>
              <relation join='inner' type='join'>
                <clause type='join'>
                  <expression op='='>
                    <expression op='[trips].[start_station_code]' />
                    <expression op='[stations].[code]' />
                  </expression>
                </clause>
                <relation connection='mysql.0cnsan804cqyyd10od4c90oq2czw' name='trips' table='[trips]' type='table' />
                <relation connection='mysql.0cnsan804cqyyd10od4c90oq2czw' name='stations' table='[stations]' type='table' />
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='1.1 2016-2017 Months' />
      <command command='tsc:brush'>
        <param name='field-captions' value='YEAR(Start Date)' />
        <param name='target' value='1.1 2016-2017 Months' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='2.3 Map of Stations By Popularity' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='% of One Way Member Trips ' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action4]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 2' type='sheet' worksheet='1.3 % of Member Trips by Month' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 2' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='% of One Way Member Trips '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Percentage of One Way Member Trips</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
          </datasources>
          <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
            <column caption='One Way Trip' datatype='real' name='[Calculation_260364359710613515]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='100 - [Calculation_974184899658866706]' />
            </column>
            <column caption='Round Trip Validation' datatype='integer' name='[Calculation_974184899655544848]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [start_station_code] = [end_station_code] THEN 1 ELSE 0 END' />
            </column>
            <column caption='Round Trip %' datatype='real' name='[Calculation_974184899658866706]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_974184899655544848])/ COUNT([__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]) * 100' />
            </column>
            <column caption='Is Not a Member' datatype='integer' name='[Calculation_974184899951222804]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([is_member]) - SUM([is_member])' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]' role='measure' type='quantitative' />
            <column caption='Is a Member' datatype='integer' name='[Calculation_974184899955027989]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([is_member])-[Calculation_974184899951222804]' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_260364359710613515]' derivation='User' name='[usr:Calculation_260364359710613515:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_974184899955027989]' derivation='User' name='[usr:Calculation_974184899955027989:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[mn:start_date:ok]' member='6' />
              <groupfilter function='member' level='[mn:start_date:ok]' member='7' />
              <groupfilter function='member' level='[mn:start_date:ok]' member='8' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359710613515:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#dfedeb' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfedeb' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359710613515:qk]' />
              <lod column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899955027989:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{44BF3589-B0FE-46ED-91AC-08BEC3864B46}' />
    </worksheet>
    <worksheet name='1.1 2016-2017 Months'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#000000'>1.1 Total Number of Trips by Month (2016 - 2017)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
          </datasources>
          <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
            <column-instance column='[id]' derivation='Count' name='[cnt:id:qk]' pivot='key' type='quantitative' />
            <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]'>
            <groupfilter function='level-members' level='[yr:start_date:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[cnt:id:qk]' scope='rows' value='Count of Bike Rentals' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[cnt:id:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#ffffff' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[cnt:id:qk]</rows>
        <cols>([federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok] / [federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok])</cols>
      </table>
      <simple-id uuid='{7EA9A942-6CCD-4BBA-8EBD-E56FCD2FB952}' />
    </worksheet>
    <worksheet name='1.2 % Difference From 2016-2017'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Difference From 2016 - 2017</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
          </datasources>
          <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]' derivation='Count' name='[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year-Trunc' name='[tyr:start_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]' included-values='in-range'>
            <min>0.017450035332494701</min>
            <max>0.10026972917345731</max>
          </filter>
          <slices>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]' field-type='quantitative' max='#2018-02-06 13:12:00#' min='#2015-11-25 10:48:00#' minor-origin='#2016-12-30 14:04:12#' minor-show='false' minor-spacing='1' minor-units='months' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]' scope='cols' value='Year ' />
            <format attr='title' class='0' field='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]' scope='rows' value='Proportional Monthly Usage Difference ' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]' />
              <text column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</rows>
        <cols>([federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok] * [federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk])</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4</value>
                <value>#2016-01-01 00:00:00#</value>
                <value>2016</value>
                <value>0.022124805135408612</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>5</value>
                <value>#2016-01-01 00:00:00#</value>
                <value>2016</value>
                <value>0.065361853440392456</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>6</value>
                <value>#2016-01-01 00:00:00#</value>
                <value>2016</value>
                <value>0.073566028429552732</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7</value>
                <value>#2016-01-01 00:00:00#</value>
                <value>2016</value>
                <value>0.081457884202146141</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8</value>
                <value>#2016-01-01 00:00:00#</value>
                <value>2016</value>
                <value>0.078374299844620895</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>9</value>
                <value>#2016-01-01 00:00:00#</value>
                <value>2016</value>
                <value>0.072256640889749799</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>10</value>
                <value>#2016-01-01 00:00:00#</value>
                <value>2016</value>
                <value>0.045721389824008529</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>11</value>
                <value>#2016-01-01 00:00:00#</value>
                <value>2016</value>
                <value>0.017489060672871422</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>4</value>
                <value>#2017-01-01 00:00:00#</value>
                <value>2017</value>
                <value>0.022793361638160307</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='9' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>5</value>
                <value>#2017-01-01 00:00:00#</value>
                <value>2017</value>
                <value>0.06843378844258137</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='10' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>6</value>
                <value>#2017-01-01 00:00:00#</value>
                <value>2017</value>
                <value>0.08641899515922688</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='11' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>7</value>
                <value>#2017-01-01 00:00:00#</value>
                <value>2017</value>
                <value>0.10026972917345726</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='12' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>8</value>
                <value>#2017-01-01 00:00:00#</value>
                <value>2017</value>
                <value>0.097847362224821835</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='13' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>9</value>
                <value>#2017-01-01 00:00:00#</value>
                <value>2017</value>
                <value>0.085255923522448193</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='14' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>10</value>
                <value>#2017-01-01 00:00:00#</value>
                <value>2017</value>
                <value>0.065178842068058795</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='15' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tyr:start_date:qk]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
                  <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>11</value>
                <value>#2017-01-01 00:00:00#</value>
                <value>2017</value>
                <value>0.017450035332494736</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{FE3822E1-F49E-4C9B-B7C3-A48B67490AF0}' />
    </worksheet>
    <worksheet name='1.3 % of Member Trips by Month'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Percentage of Trips By Members Vs. Non-members</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
          </datasources>
          <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
            <column caption='% of Members Vs Non-Members' datatype='real' name='[Calculation_974184899639693322]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([is_member])/ COUNT([__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]) * 100' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Hour' name='[hr:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[start_date]' derivation='Month-Trunc' name='[tmn:start_date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_974184899639693322]' derivation='User' name='[usr:Calculation_974184899639693322:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Weekday' name='[wd:start_date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[Action (HOUR(Start Date),WEEKDAY(Start Date))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[wd:start_date:ok]' member='5' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[hr:start_date:ok]' member='0' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='1' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='2' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='3' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='4' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='5' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='6' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='7' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='8' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='9' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='10' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='11' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='12' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='13' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='14' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='15' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='16' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='17' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='18' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='19' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='20' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='21' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='22' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='23' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[hr:start_date:ok]' />
                <hierarchy name='[wd:start_date:ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]'>
            <groupfilter function='member' level='[yr:start_date:ok]' member='2017' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</column>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[Action (HOUR(Start Date),WEEKDAY(Start Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tmn:start_date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]' scope='rows' value='Count of Trips By Year' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]' />
              <text column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899639693322:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]</rows>
        <cols>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[tmn:start_date:qk]</cols>
      </table>
      <simple-id uuid='{0E3D26C0-E0F3-42D7-97F4-B33D98011ABB}' />
    </worksheet>
    <worksheet name='1.4 Most Popular Stations by Round Trip'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Round Trips</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
          </datasources>
          <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
            <column caption='Round Trip Validation' datatype='integer' name='[Calculation_974184899655544848]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [start_station_code] = [end_station_code] THEN 1 ELSE 0 END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]' role='measure' type='quantitative' />
            <column caption='Round Trip %' datatype='real' name='[Calculation_974184899658866706]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_974184899655544848])/ COUNT([__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]) * 100' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_974184899658866706]' derivation='User' name='[usr:Calculation_974184899658866706:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Basile-Routhier / Gouin&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Berlioz / de l&apos;Île des Soeurs&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Casino de Montréal&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Gare Canora&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;LaSalle / 4e avenue&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;LaSalle / Sénécal&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Métro Angrignon&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Métro Jean-Drapeau&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Parc Plage&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Quai de la navette fluviale&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899658866706:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]' value='-90' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]' />
              <text column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899658866706:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899658866706:qk]</rows>
        <cols>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]</cols>
      </table>
      <simple-id uuid='{7BD3C939-BA21-430B-8D15-957C7085DF18}' />
    </worksheet>
    <worksheet name='2.1 % of Round Trips Vs. % of Member Trips By Station'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percentage of Round Trips Versus Percentage of Member Trips</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
          </datasources>
          <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
            <column caption='% of Members Vs Non-Members' datatype='real' name='[Calculation_974184899639693322]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([is_member])/ COUNT([__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]) * 100' />
            </column>
            <column caption='Round Trip Validation' datatype='integer' name='[Calculation_974184899655544848]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [start_station_code] = [end_station_code] THEN 1 ELSE 0 END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]' role='measure' type='quantitative' />
            <column caption='Round Trip %' datatype='real' name='[Calculation_974184899658866706]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_974184899655544848])/ COUNT([__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]) * 100' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_974184899639693322]' derivation='User' name='[usr:Calculation_974184899639693322:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_974184899658866706]' derivation='User' name='[usr:Calculation_974184899658866706:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Basile-Routhier / Gouin&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Berlioz / de l&apos;Île des Soeurs&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Casino de Montréal&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;CHSLD Éloria-Lepage (de la Pépinière / de Marseille)&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;de la Commune / Place Jacques-Cartier&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Gare Canora&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Jacques-Le Ber / de la Pointe Nord&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;LaSalle / 4e avenue&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;LaSalle / Sénécal&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Métro Angrignon&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Métro Jean-Drapeau&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Parc Plage&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Place du Commerce&quot;' />
              <groupfilter function='member' level='[none:name:nk]' member='&quot;Quai de la navette fluviale&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899639693322:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899639693322:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]' />
              <text column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899639693322:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899658866706:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899658866706:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]</rows>
        <cols>([federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899639693322:qk] + [federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899658866706:qk])</cols>
      </table>
      <simple-id uuid='{D3D88DA2-9D39-4EF2-9F8D-98318453998C}' />
    </worksheet>
    <worksheet name='2.1 patterns of Round Trips Vs. % of Member Trips By Station'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Patterns In Our Data</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
          </datasources>
          <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
            <column caption='% of Members Vs Non-Members' datatype='real' name='[Calculation_974184899639693322]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([is_member])/ COUNT([__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]) * 100' />
            </column>
            <column caption='Round Trip Validation' datatype='integer' name='[Calculation_974184899655544848]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='IF [start_station_code] = [end_station_code] THEN 1 ELSE 0 END' />
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='trips' datatype='integer' name='[__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]' role='measure' type='quantitative' />
            <column caption='Round Trip %' datatype='real' name='[Calculation_974184899658866706]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Calculation_974184899655544848])/ COUNT([__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]) * 100' />
            </column>
            <_.fcp.ObjectModelTableType.true...column caption='trips' datatype='table' name='[__tableau_internal_object_id__].[trips_8EF9C24802D84443B2C8F6D946604CD2]' role='measure' type='quantitative' />
            <column aggregation='Sum' caption='End Station Code' datatype='integer' name='[end_station_code]' role='dimension' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column caption='Name' datatype='string' name='[name]' role='dimension' type='nominal' />
            <column-instance column='[name]' derivation='None' name='[none:name:nk]' pivot='key' type='nominal' />
            <column aggregation='Sum' caption='Start Station Code' datatype='integer' name='[start_station_code]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_974184899639693322]' derivation='User' name='[usr:Calculation_974184899639693322:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_974184899658866706]' derivation='User' name='[usr:Calculation_974184899658866706:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899639693322:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899658866706:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#818b91' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899639693322:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899658866706:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#818b91' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899658866706:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899658866706:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#818b91' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899639693322:qk] + [federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899658866706:qk])</rows>
        <cols>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]</cols>
      </table>
      <simple-id uuid='{7210EF46-1B01-4491-9DF8-F4B2CDE5AB48}' />
    </worksheet>
    <worksheet name='2.2 Trip Length of Member Vs. Non-Member'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Trips Lengths by Members Vs. Non-Members
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
          </datasources>
          <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
            <column caption='Minutes' datatype='real' name='[Calculation_260364359326175234]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[duration_sec]/60' />
            </column>
            <column caption='Is Not a Member' datatype='integer' name='[Calculation_974184899951222804]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([is_member]) - SUM([is_member])' />
            </column>
            <column caption='Is a Member' datatype='integer' name='[Calculation_974184899955027989]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([is_member])-[Calculation_974184899951222804]' />
            </column>
            <column aggregation='None' caption='Duration Sec (bin)' datatype='integer' name='[Duration Sec (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[duration_sec]' peg='0' size='60' />
            </column>
            <column-instance column='[Calculation_260364359326175234]' derivation='Count' name='[cnt:Calculation_260364359326175234:qk]' pivot='key' type='quantitative' />
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[Duration Sec (bin)]' derivation='None' name='[none:Duration Sec (bin):ok]' pivot='key' type='ordinal' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_974184899951222804]' derivation='User' name='[usr:Calculation_974184899951222804:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_974184899955027989]' derivation='User' name='[usr:Calculation_974184899955027989:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[cnt:Calculation_260364359326175234:qk]' included-values='in-range'>
            <min>372</min>
            <max>538804</max>
          </filter>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='1' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='2' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='3' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='5' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='6' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='7' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='8' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='9' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='10' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='11' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='12' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='13' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='14' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='15' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='16' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='17' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='18' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='19' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='20' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='21' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='22' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='23' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='24' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='25' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='26' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='27' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='28' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='29' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='30' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='31' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='32' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='33' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='34' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='35' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='36' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='37' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='38' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='39' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='40' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='41' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='42' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='43' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='44' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='45' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:start_date:ok]' member='2016' />
              <groupfilter function='member' level='[yr:start_date:ok]' member='2017' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[cnt:Calculation_260364359326175234:qk]</column>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</column>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#499894' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899955027989:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
              </style-rule>
            </style>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899951222804:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899955027989:qk] + [federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899951222804:qk])</rows>
        <cols>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[Duration Sec (bin)]</column>
          <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[Id (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{39543228-01C3-4F71-AB47-FF7D373D4221}' />
    </worksheet>
    <worksheet name='2.3 Map of Stations By Popularity'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Map of Station Locations and Popularity</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column-instance column='[start_date]' derivation='Hour' name='[hr:start_date:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Latitude' datatype='real' name='[latitude]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Longitude' datatype='real' name='[longitude]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[latitude]' derivation='None' name='[none:latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[longitude]' derivation='None' name='[none:longitude:qk]' pivot='key' type='quantitative' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[duration_sec]' derivation='Sum' name='[sum:duration_sec:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Weekday' name='[wd:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[Action (HOUR(Start Date),WEEKDAY(Start Date))]'>
            <groupfilter function='reorder-dimensionality' user:ui-action-filter='[Action3]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[wd:start_date:ok]' member='5' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[hr:start_date:ok]' member='0' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='1' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='2' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='3' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='4' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='5' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='6' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='7' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='8' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='9' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='10' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='11' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='12' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='13' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='14' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='15' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='16' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='17' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='18' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='19' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='20' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='21' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='22' />
                  <groupfilter function='member' level='[hr:start_date:ok]' member='23' />
                </groupfilter>
              </groupfilter>
              <order>
                <hierarchy name='[hr:start_date:ok]' />
                <hierarchy name='[wd:start_date:ok]' />
              </order>
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[sum:duration_sec:qk]' included-values='in-range'>
            <min>563923</min>
            <max>75986668</max>
          </filter>
          <slices>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[sum:duration_sec:qk]</column>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[Action (HOUR(Start Date),WEEKDAY(Start Date))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:longitude:qk]' field-type='quantitative' max='-8172394.9466119278' min='-8204881.5458216462' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:latitude:qk]' field-type='quantitative' max='5709743.6463895449' min='5696190.954647175' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[sum:duration_sec:qk]' palette='green_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[sum:duration_sec:qk]' />
              <size column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[sum:duration_sec:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:latitude:qk]</rows>
        <cols>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:longitude:qk]</cols>
      </table>
      <simple-id uuid='{C0FE79E7-992A-43D7-B4D0-F1D6308AE526}' />
    </worksheet>
    <worksheet name='3.1 Count of Non-Members (Long Trips)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Count of Long Trip Non-Members and Revenue </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
          </datasources>
          <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
            <column caption='Long Trip Group ' datatype='real' name='[Calculation_260364359683362824]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_974184899951222804] * 7.79' />
            </column>
            <column caption='Is Not a Member' datatype='integer' name='[Calculation_974184899951222804]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([is_member]) - SUM([is_member])' />
            </column>
            <column aggregation='None' caption='Duration Sec (bin)' datatype='integer' name='[Duration Sec (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[duration_sec]' peg='0' size='60' />
            </column>
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[Duration Sec (bin)]' derivation='None' name='[none:Duration Sec (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_260364359683362824]' derivation='User' name='[usr:Calculation_260364359683362824:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_974184899951222804]' derivation='User' name='[usr:Calculation_974184899951222804:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='46' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='47' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='48' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='49' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='50' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='51' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='52' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='53' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='54' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='55' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='56' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='57' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='58' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='59' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='60' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899951222804:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359683362824:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899951222804:qk] + [federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359683362824:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{0D014676-4666-452E-A386-D4E11F314434}' />
    </worksheet>
    <worksheet name='3.1 Count of Non-Members (Medium Trips)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Count of Medium Trip Non-Members and Revenue
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
          </datasources>
          <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
            <column caption='Medium Trip Group ' datatype='real' name='[Calculation_260364359683039239]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_974184899951222804] * 4.79' />
            </column>
            <column caption='Is Not a Member' datatype='integer' name='[Calculation_974184899951222804]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([is_member]) - SUM([is_member])' />
            </column>
            <column aggregation='None' caption='Duration Sec (bin)' datatype='integer' name='[Duration Sec (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[duration_sec]' peg='0' size='60' />
            </column>
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[Duration Sec (bin)]' derivation='None' name='[none:Duration Sec (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_260364359683039239]' derivation='User' name='[usr:Calculation_260364359683039239:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_974184899951222804]' derivation='User' name='[usr:Calculation_974184899951222804:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='31' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='32' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='33' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='34' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='35' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='36' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='37' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='38' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='39' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='40' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='41' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='42' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='43' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='44' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='45' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899951222804:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359683039239:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899951222804:qk] + [federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359683039239:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{382F78C2-515D-4D19-9AA9-61985147EB0E}' />
    </worksheet>
    <worksheet name='3.1 Count of Non-Members (Short Trips)'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Count of Short Trip Non-Members &amp; Revenue Earned</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
          </datasources>
          <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
            <column caption='Short Trip Group ' datatype='real' name='[Calculation_260364359682379782]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_974184899951222804] * 2.99' />
            </column>
            <column caption='Is Not a Member' datatype='integer' name='[Calculation_974184899951222804]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([is_member]) - SUM([is_member])' />
            </column>
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_260364359682379782]' derivation='User' name='[usr:Calculation_260364359682379782:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_974184899951222804]' derivation='User' name='[usr:Calculation_974184899951222804:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899951222804:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359682379782:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899951222804:qk] + [federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359682379782:qk])</rows>
        <cols />
      </table>
      <simple-id uuid='{6D9D9321-E38E-4DB7-AE04-B4A5C0BA6BD2}' />
    </worksheet>
    <worksheet name='3.1 Long Trip Non-Member Revenue'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Long Trips Between 45 - 60 Minutes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
          </datasources>
          <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
            <column caption='Long Trip Group ' datatype='real' name='[Calculation_260364359683362824]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_974184899951222804] * 7.79' />
            </column>
            <column caption='Is Not a Member' datatype='integer' name='[Calculation_974184899951222804]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([is_member]) - SUM([is_member])' />
            </column>
            <column caption='Is a Member' datatype='integer' name='[Calculation_974184899955027989]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([is_member])-[Calculation_974184899951222804]' />
            </column>
            <column aggregation='None' caption='Duration Sec (bin)' datatype='integer' name='[Duration Sec (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[duration_sec]' peg='0' size='60' />
            </column>
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[Duration Sec (bin)]' derivation='None' name='[none:Duration Sec (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_260364359683362824]' derivation='User' name='[usr:Calculation_260364359683362824:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_974184899955027989]' derivation='User' name='[usr:Calculation_974184899955027989:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899955027989:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='46' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='47' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='48' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='49' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='50' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='51' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='52' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='53' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='54' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='55' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='56' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='57' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='58' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='59' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='60' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[:Measure Names]</column>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#818b91' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359683362824:qk]</rows>
        <cols>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</cols>
      </table>
      <simple-id uuid='{A114C86D-7577-4F05-903D-0A4950A4E4A9}' />
    </worksheet>
    <worksheet name='3.1 Medium Trip Non-Member Revenue'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Medium Trips Between 30 - 45 minutes</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
          </datasources>
          <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
            <column caption='Medium Trip Group ' datatype='real' name='[Calculation_260364359683039239]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_974184899951222804] * 4.79' />
            </column>
            <column caption='Is Not a Member' datatype='integer' name='[Calculation_974184899951222804]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([is_member]) - SUM([is_member])' />
            </column>
            <column caption='Is a Member' datatype='integer' name='[Calculation_974184899955027989]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([is_member])-[Calculation_974184899951222804]' />
            </column>
            <column aggregation='None' caption='Duration Sec (bin)' datatype='integer' name='[Duration Sec (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[duration_sec]' peg='0' size='60' />
            </column>
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[Duration Sec (bin)]' derivation='None' name='[none:Duration Sec (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_260364359683039239]' derivation='User' name='[usr:Calculation_260364359683039239:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_974184899955027989]' derivation='User' name='[usr:Calculation_974184899955027989:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899955027989:qk]&quot;' user:op='manual' />
          </filter>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='31' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='32' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='33' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='34' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='35' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='36' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='37' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='38' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='39' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='40' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='41' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='42' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='43' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='44' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='45' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[:Measure Names]</column>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359683039239:qk]</rows>
        <cols>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</cols>
      </table>
      <simple-id uuid='{86ECFFC4-1490-4F2E-8044-FAEFA4509950}' />
    </worksheet>
    <worksheet name='3.1 Short Trip Non-Member Revenue'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Short Trips Between 0 - 30 minutes </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
          </datasources>
          <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
            <column caption='Short Trip Group ' datatype='real' name='[Calculation_260364359682379782]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_974184899951222804] * 2.99' />
            </column>
            <column caption='Is Not a Member' datatype='integer' name='[Calculation_974184899951222804]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([is_member]) - SUM([is_member])' />
            </column>
            <column caption='Is a Member' datatype='integer' name='[Calculation_974184899955027989]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([is_member])-[Calculation_974184899951222804]' />
            </column>
            <column aggregation='None' caption='Duration Sec (bin)' datatype='integer' name='[Duration Sec (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='1' formula='[duration_sec]' peg='0' size='60' />
            </column>
            <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column-instance column='[Duration Sec (bin)]' derivation='None' name='[none:Duration Sec (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_260364359682379782]' derivation='User' name='[usr:Calculation_260364359682379782:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_974184899955027989]' derivation='User' name='[usr:Calculation_974184899955027989:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[:Measure Names]'>
            <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184899955027989:qk]&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='1' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='2' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='3' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='4' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='5' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='6' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='7' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='8' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='9' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='10' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='11' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='12' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='13' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='14' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='15' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='16' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='17' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='18' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='19' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='20' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='21' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='22' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='23' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='24' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='25' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='26' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='27' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='28' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='29' />
              <groupfilter function='member' level='[none:Duration Sec (bin):ok]' member='30' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[:Measure Names]</column>
            <column>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#69aaa5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359682379782:qk]</rows>
        <cols>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</cols>
      </table>
      <simple-id uuid='{2A95ACB2-22FF-4538-8F72-7C8C38BA177B}' />
    </worksheet>
    <worksheet name='3.3 Short Trip Rental Frequency by Hour'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true'>Short Trip Rental Frequency by Hour</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
          </datasources>
          <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
            <column caption='Short Trip Group ' datatype='real' name='[Calculation_260364359682379782]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_974184899951222804] * 2.99' />
            </column>
            <column caption='Is Not a Member' datatype='integer' name='[Calculation_974184899951222804]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNT([is_member]) - SUM([is_member])' />
            </column>
            <column-instance column='[start_date]' derivation='Hour' name='[hr:start_date:ok]' pivot='key' type='ordinal' />
            <column caption='Is Member' datatype='integer' name='[is_member]' role='measure' type='quantitative' />
            <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_260364359682379782]' derivation='User' name='[usr:Calculation_260364359682379782:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start_date]' derivation='Weekday' name='[wd:start_date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <manual-sort column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[hr:start_date:ok]' direction='ASC'>
            <dictionary>
              <bucket>0</bucket>
              <bucket>1</bucket>
              <bucket>2</bucket>
              <bucket>3</bucket>
              <bucket>4</bucket>
              <bucket>5</bucket>
              <bucket>6</bucket>
              <bucket>7</bucket>
              <bucket>8</bucket>
              <bucket>9</bucket>
              <bucket>10</bucket>
              <bucket>11</bucket>
              <bucket>12</bucket>
              <bucket>13</bucket>
              <bucket>14</bucket>
              <bucket>15</bucket>
              <bucket>16</bucket>
              <bucket>17</bucket>
              <bucket>18</bucket>
              <bucket>19</bucket>
              <bucket>20</bucket>
              <bucket>21</bucket>
              <bucket>22</bucket>
              <bucket>23</bucket>
            </dictionary>
          </manual-sort>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='band-color' scope='rows' value='#dfedeb' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[hr:start_date:ok]' value='ih a' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359682379782:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#dfedeb' />
            <format attr='background-color' data-class='total' scope='rows' value='#dfedeb' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f5eddc' />
            <format attr='band-size' scope='rows' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359682379782:qk]' />
              <size column='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359682379782:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#e15759' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[hr:start_date:ok]</rows>
        <cols>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[wd:start_date:ok]</cols>
      </table>
      <simple-id uuid='{A946E402-429B-4175-A61E-0FE3D6712DED}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
      </datasources>
      <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
        <column aggregation='None' caption='Duration Sec (bin)' datatype='integer' name='[Duration Sec (bin)]' role='dimension' type='ordinal'>
          <calculation class='bin' decimals='1' formula='[duration_sec]' peg='0' size='60' />
        </column>
        <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
        <column-instance column='[Duration Sec (bin)]' derivation='None' name='[none:Duration Sec (bin):ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='5' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='3' w='82400' x='800' y='1000'>
              <zone h='49000' id='1' name='3.1 Short Trip Non-Member Revenue' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='7' name='3.1 Medium Trip Non-Member Revenue' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='10' name='3.1 Long Trip Non-Member Revenue' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='4' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='49000' id='8' name='3.1 Medium Trip Non-Member Revenue' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='49000' id='11' name='3.1 Long Trip Non-Member Revenue' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]' w='16000' x='83200' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1000' minheight='1000' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='20' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='19' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='1' is-fixed='true' name='3.1 Short Trip Non-Member Revenue' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='49000' id='8' mode='checkdropdown' name='3.1 Medium Trip Non-Member Revenue' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='7' is-fixed='true' name='3.1 Medium Trip Non-Member Revenue' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='49000' id='11' mode='checkdropdown' name='3.1 Long Trip Non-Member Revenue' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]' w='16000' x='83200' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='10' is-fixed='true' name='3.1 Long Trip Non-Member Revenue' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{B7AD894D-4C84-4C58-8C49-4567D743FF65}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='stations+ (bixi)' name='federated.0fnm91705lf9ic1as8hzt1e4m1lt' />
      </datasources>
      <datasource-dependencies datasource='federated.0fnm91705lf9ic1as8hzt1e4m1lt'>
        <column caption='Duration Sec' datatype='integer' name='[duration_sec]' role='measure' type='quantitative' />
        <column-instance column='[start_date]' derivation='Month' name='[mn:start_date:ok]' pivot='key' type='ordinal' />
        <column caption='Start Date' datatype='datetime' name='[start_date]' role='dimension' type='ordinal' />
        <column-instance column='[duration_sec]' derivation='Sum' name='[sum:duration_sec:qk]' pivot='key' type='quantitative' />
        <column-instance column='[start_date]' derivation='Year' name='[yr:start_date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='82400' x='800' y='1000'>
              <zone h='49000' id='3' name='2.3 Map of Stations By Popularity' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='15' name='1.3 % of Member Trips by Month' w='41200' x='42000' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='20' name='% of One Way Member Trips ' w='41200' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='20750' id='8' name='2.3 Map of Stations By Popularity' pane-specification-id='0' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[sum:duration_sec:qk]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='9' name='2.3 Map of Stations By Popularity' pane-specification-id='0' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[sum:duration_sec:qk]' w='16000' x='83200' y='21750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8625' id='13' name='2.3 Map of Stations By Popularity' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[sum:duration_sec:qk]' values='database' w='16000' x='83200' y='29875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='11125' id='16' name='1.3 % of Member Trips by Month' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]' w='16000' x='83200' y='38500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='5750' id='17' name='1.3 % of Member Trips by Month' pane-specification-id='4' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]' w='16000' x='83200' y='49625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='25375' id='21' name='% of One Way Member Trips ' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]' values='database' w='16000' x='83200' y='55375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1300' minheight='1300' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='25' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='24' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='8625' id='13' name='2.3 Map of Stations By Popularity' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[sum:duration_sec:qk]' values='database' w='16000' x='83200' y='29875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='2.3 Map of Stations By Popularity' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='20750' id='8' name='2.3 Map of Stations By Popularity' pane-specification-id='0' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[sum:duration_sec:qk]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='9' name='2.3 Map of Stations By Popularity' pane-specification-id='0' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[sum:duration_sec:qk]' w='16000' x='83200' y='21750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='25375' id='21' mode='checkdropdown' name='% of One Way Member Trips ' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]' values='database' w='16000' x='83200' y='55375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='20' is-fixed='true' name='% of One Way Member Trips ' w='41200' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='11125' id='16' mode='checkdropdown' name='1.3 % of Member Trips by Month' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]' w='16000' x='83200' y='38500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='1.3 % of Member Trips by Month' w='41200' x='42000' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='5750' id='17' name='1.3 % of Member Trips by Month' pane-specification-id='4' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]' w='16000' x='83200' y='49625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{32979FE3-F4FF-44E0-A552-D9888DAEE8C1}' />
    </dashboard>
  </dashboards>
  <windows source-height='51'>
    <window class='worksheet' maximized='true' name='1.1 2016-2017 Months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{427EF69C-E40C-400D-B92A-62B11F659A1B}' />
    </window>
    <window class='worksheet' name='1.2 % Difference From 2016-2017'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[__tableau_internal_object_id__].[pcto:cnt:trips_8EF9C24802D84443B2C8F6D946604CD2:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FD9CD4CF-43A4-4C6B-9F0D-FC01380156C0}' />
    </window>
    <window class='worksheet' name='1.3 % of Member Trips by Month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]' type='filter' />
            <card pane-specification-id='4' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C4E2E347-80C4-49B7-8335-779AA139DFA0}' />
    </window>
    <window class='worksheet' name='1.4 Most Popular Stations by Round Trip'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight field='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]'>
          <bucket-selection />
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{A28CB0B7-5CEE-4725-909E-B83FA7E93912}' />
    </window>
    <window class='worksheet' name='2.1 % of Round Trips Vs. % of Member Trips By Station'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[:Measure Names]</field>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AC7C185F-6D53-452E-8F95-10AE9F71F1A0}' />
    </window>
    <window class='worksheet' name='2.1 patterns of Round Trips Vs. % of Member Trips By Station'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E766FE3C-42B5-471F-A73A-20F33A0060F1}' />
    </window>
    <window class='worksheet' name='2.2 Trip Length of Member Vs. Non-Member'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</field>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B6E1EAC0-DEA8-4423-8EB4-E2E86E2521C2}' />
    </window>
    <window class='worksheet' name='2.3 Map of Stations By Popularity'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[sum:duration_sec:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[sum:duration_sec:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{75DDA378-5F94-46E9-8F37-5B208D6D7BB0}' />
    </window>
    <window class='worksheet' name='3.1 Count of Non-Members (Short Trips)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{97C396F8-7BAB-4086-AD1D-61E78F91B368}' />
    </window>
    <window class='worksheet' name='3.1 Count of Non-Members (Medium Trips)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{979514B6-5792-45ED-B595-9192D2BD194D}' />
    </window>
    <window class='worksheet' name='3.1 Count of Non-Members (Long Trips)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7B2D5196-157E-4397-9F6F-46BEA236B498}' />
    </window>
    <window class='worksheet' name='3.1 Short Trip Non-Member Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[:Measure Names]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FC8BFED7-20D4-469F-80E8-F24D8E8C6EDB}' />
    </window>
    <window class='worksheet' name='3.1 Medium Trip Non-Member Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]' type='filter' />
            <card param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[:Measure Names]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{78F8BA58-DA5C-4484-AB1D-A3411F6824A0}' />
    </window>
    <window class='worksheet' name='3.1 Long Trip Non-Member Revenue'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]' type='filter' />
            <card param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[:Measure Names]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:Duration Sec (bin):ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C63F0D78-0D53-451D-9FD6-E27A730015DC}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='3.1 Long Trip Non-Member Revenue'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='3.1 Medium Trip Non-Member Revenue'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='3.1 Short Trip Non-Member Revenue'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5D5C0998-D68E-4C16-8BD3-D4CBFF7C486F}' />
    </window>
    <window class='worksheet' name='3.3 Short Trip Rental Frequency by Hour'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359682379782:qk]' type='size' />
            <card pane-specification-id='0' param='[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_260364359682379782:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[usr:Calculation_974184900018462742:qk]</field>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B39FF07D-55FF-4665-BFC1-77940077609C}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='% of One Way Member Trips ' />
        <viewpoint name='1.3 % of Member Trips by Month'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[yr:start_date:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='2.3 Map of Stations By Popularity'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{627C30E2-E95C-48D4-99A5-0A20ADC269BA}' />
    </window>
    <window class='worksheet' name='% of One Way Member Trips '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[mn:start_date:ok]</field>
            <field>[federated.0fnm91705lf9ic1as8hzt1e4m1lt].[none:name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7D31F2A3-7AFD-4395-AAA6-19B337F5D92E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='% of One Way Member Trips ' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1.1 2016-2017 Months' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1.2 % Difference From 2016-2017' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='1.3 % of Member Trips by Month' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAMQ0lEQVR4nO3d63Mb133G8e9ZYBeXBQgQBC+6UZEs6+I4dm0nbarpi7zt9E1n+kf2dd90
      pp526vGljT2ZNE5iR3VkKZEoineCJO7Y3dMXlGUpoFyBxIXAeT4znNGIC/A3AB6c3bP722OS
      JLGIOCoN0Np/MOk6RCbCG/ozmmDoTykyKsMPgMgUUQDEaelBNrb2h4+XjTFnKkZk3AYKwNbG
      Bjt7RwRhSLPVpZiBHmnyKfByRS4tlbEG0LySTImBAlCpzPN0fQuyBcphBjxDyibU9mqslCpg
      0s9+lACZDgMFwBhYXr3KUinHbr1DITD0jM+F5SXiJAEbYRIPbG9U9YoMlUmSxA71PIAJwHaH
      93wiI6RZIHHaQLtAIsNSbzT55LPPqcyX6fV63P35Tzk8POJ/fvsVxTDED3ze/clbI69DI4BM
      RCHMc/HCMgDNVot6o8l/fPQp6+sbFIsFol40ljo0AshEWGtZWV4kn8vx5e++ptPp8E//+A88
      Wd/gyZOnVKuVsdShg2A5k//v5OikvO5JWY0Acibb//op9suvJ13GS4K//wXz7916rW0VADkT
      b78Ga2uTLuMlptl87W11ECxO0wggs8e+/rGJAiAzp/WbP9D5+PPX2lYBkJljGg1Sa09ea1sd
      A4jTFABxmgIgTlMAxGkD9wTHcUIq5REnFs8cdz96xmAteJ56gmW6DBSA/a1NHm3sE5ZKtNvf
      dYSlyBiLH85xcVE9wTJdBgpAgsFPQyeGQi7A8wyBtRwdHLD0Uk9wMqp65dyZ7lF/sKb46gJd
      m2ZpoUCt0SP0ITI+ly4sEyfxCz3B47mWW86D6R7uBwqAl0pzcWUBgGo589LvfJ1TkymkWSBx
      mgIgTlMAxGkKgDhNAXBEt9sliiLanQ7WWqy1tFptkiQhiuJJlzcxmrpxgLWWD//9Y/L5HM1W
      i+s/WgUDv//qf/ngvXeo1xu8+87o78FzHmkEcISX8oiiiMWFCt1uD5tYAt+nUAhJno0ILtII
      4ABjDO+8fYd8PsfBwRErK4tEUUQqlSJJYlIpd78HFYAp02n1iE9x17RKsQxAtpLBdi0pUqxe
      uARAaXWO1lH7VPUkiZ3q3QgFYMrU/+0T7If/Oekynkuurk51AKa5dpEzUwDEaQqAOE0BEKcp
      AOI0BUCcNtA0aLN+xB+/fUy5WqHe7DKXMXRJM5f1iU2KlcX5UdUpMhIDBSAXFlhYXMAA5XwG
      ayBjE9YerXH19ltg0lgvDYmbp9XHY7p7cM+bwU6E2YRyqYRne2wfdigG0DNZbr51iyjqgg20
      TvDI6ctlmAZbKNtLUQhTQJarheKIShIZHx0Ei9MUAHGaAiBOUwDEaQqAOE0BEKcpAOI0BUCc
      pgCI0xQAcZoCIE5TAMRpCoA4TQEQpykA4jQFYASstezXDojjmHanA0Cj0aTT6bCzs0ez2Zpw
      hfKdwXqCD2s82m5QLqTZPegwl4Gu8Slm0sRemgvqCQbg0eMn/PKLX/P+X73N4WGdD95/h48+
      /i+y2QyVyvFr9N67b0+4SoEBA3Bw2ICoyW49pBQGWGPI2IT1tXVWb91WT/AziU3hBzlSfo52
      75B21/LGjZs8ePgnUuksd27fxJrUKZ9dPcHDNFAAllYWaa1ts7hQZL/eoRgYesbn5p1bRHH0
      wjrBbvcEr15eAnub0lyOXrdIr9ukVMzyi7/7GcYz+KkE7GkXE3f7y2XYBgpAKh1w/UfHt9Qu
      Fme/J7hZa2Kj0y36vVQoQQyX5xehHTOXzmKbPSzQqHdPXVPSizQGDJFuj/4D6v/8L3i/+3rS
      ZbwkvrqqN22INAskTlMAxGkKgDhNARCnKQDiNAVAnKYAiNMUAHGaAiBOOzEAe3v7fPnl18Tj
      rkZkzE4OwOYGG5s1TncVjMj0ODEA7U6PdNrDWl15KLOtLwDWWsJCnrRv2Nrcn0RNImNzwggQ
      sbdXp1CY4+JKZfwViYxRXwCS2KM8F9COtPsjs6/v0vK1P9xjPUrI+37fxu3aDt9st6kW0uwd
      dZ6vE1zMpEk8nwtL6gmW6dIXgGJ1kfeXFsjSPzwknk+qt8thp0Q5zDzvCX66/pQrb85iT7B6
      r2ZdXwCMiXjwYI0711f73v50EJALi6xUC+wefd8TfOvOPL1oFnuCZyXI8ip9AajvNiguFvni
      i9/ys799lxd3hIJsjutXcwDkw8JLj8uNtEyR0eg7CF64UuVo55Ck1eL0rdsi06FvBEibBOPn
      qS5Y7QHLzOvfBaodsn/YpLN/wLVJVCQyRn27QMXqAjvr6+QLBV0qKjOv7zO+v77J6rUrtA4a
      tCdRkcgY9e0CLb1xg0UL9i0dA8js6xsBDja3+P39P3NUb2oWXGZeXwAKlTIHT5/w37/6itPe
      vlVkWvQFIOVnyOeymG5XDTEy8068z+qP377Ndq1FdtzViIxZXwCsjfj001+TyeRYvFAlM4mq
      RMbkhKl+j/lSjp7xOO0aJiLT4oSrQT1SqRSFvL77ZfadeLL34qUVms2WpkFl5p18tYO1JEmi
      AMjMOzEAm1s79DpdBUBmXt8xQK/VoLSwwNZhl7/sCrY24Ve/ucfVlQqbh8frBPeMTyFIkaQC
      LqonWKZMXwCOtjfZbHqkk5gICF743fbTdY6aHQ7aMeUwAwYyNmHj6SZXbtxUT7BMnb4AzF+5
      xvXdXVKXll768AMsXbzM35QXSJOwc9Sh8F1PcHWBKIrVEyxT54RpUEOlWn3lA8L8cffvpXw4
      uqpExkQ9L+I0BUCcpgCI0xQAcZoCIE5TAMRpCoA4TQEQpykA4jQFQJymAIjTFABxmgIgTlMA
      xGkKgDhNARCnnXhrxFdpNxt8c/8Rxfky9eb36wQXAg+bzqonWKbOQAFIBz5ZP0U7gnKYxRrI
      2oStzW0uv/GmeoJl6gwUgLjXww+LXKmW2K9/3xO8WF0gitUTLNNnoABkciHXVo97gXP5/EgK
      EhknHQSL0xQAcZoCIE5TAMRpCoA4TQEQpykA4jQFQJymAIjTFABxmgIgTlMAxGkKgDhNARCn
      DXQ59HmUJAmffPY5lfkyO7v73Ll9g263x+O1darVCru7+9z9+U8nXaacU1MfAGst9XqTMAzx
      /TS9XkQcx7TbbYqFEM9okJNXGygAnWaDbx88Jpgr0WwerxP8XU8wfm4iPcHGGMrlOXw/TaMR
      kyQJnucRBAGP19YJgr9c61LkewMFwBjD/PIycbdDUMiAMWRtwvbWLpeu35hIT7BJwd27d/v+
      f/Xqtef/Pn016gmedQMFIIpjGkd1VpYXOGp2KQTHK8UvLVaJh9ATvP3hL0nu/fFUjx0F2400
      SzDjBgpAvlDkRqEIQCEcfk+w2dwide+boT/vaUVXVyddgoyYvuDEaQqAOE0BEKcpAOI0BUCc
      pgCI0xQAcZoCIE5TAMRpCoA4TQEQpykA4jQFQJymAIjTFABxmgIgThuoIabbbvF094hixrB1
      8GydYJNmLpchSmCpWh5VnSIjMdAIEGRzZH2Pds8ylwtIUj6+sfzp24f4+fB5T7A1/ql+1IMr
      4zbwXSF29g5Yqs5z1OpRDAw9E/Dm7Zv0Oi3I+2dcJ1jr8sp4DbZOcD7kx7ffAGBxJOWIjJcO
      gsVpCoA4TQEQpykA4jQFQJymAIjTFABxmgIgTlMAxGkKgDhNARCnKQDiNAVAnKYAiNPOtEzq
      wwcP6ZImTBtMNuTSBFaJFDmLM4wAlnSQJet77O3VCILM8KoSGZMzjACGSimkZ3wuLC8RxfHw
      qhIZE5MkiW3tPxjSs6WPF+61p2htNIbuxi4c1IZTy5l52GwG025NupCX2FyIaTUmXcYzBpvN
      YdrNSRfykkFeo+EG4EwMGA/seRlJPI57lM9Zn7JJg40mXcUz5+09e2aA1+hMB8HDZc/ZC5lM
      uoCTnZsPP5y/9+yZAV6jiU+DPrj/kN4LnzWbxBzU9jhonPbOEmfz7f2HtJoN7j1cn8jfP0mt
      dkiSnKORyMbs1eoA1Lb36EywlHbjiD+v7/zAFjH1xqsrnOgIkEQdNrd2iAOf5m6DdDZFWAiJ
      oxalSjiRmgLf4+HjHTIZw8cffUZp+SLFMMvq5RXS3mTuW9Tpdllb28B4hmbjCM+D+w83ef+v
      P2C5nBt/QdZyWNum2W5xsHFIvtcjbQxXLiyNvZT1p1ts1SO8JAIT0TjsEEVdKotl9mtNrGfp
      tD3e+8l1Tnr7/g/FDwLEV4REvwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='1.4 Most Popular Stations by Round Trip' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2.1 % of Round Trips Vs. % of Member Trips By Station' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='2.1 patterns of Round Trips Vs. % of Member Trips By Station' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='2.2 Trip Length of Member Vs. Non-Member' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='2.3 Map of Stations By Popularity' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='3.1 Count of Non-Members (Long Trips)' width='130'>
      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
    </thumbnail>
    <thumbnail height='192' name='3.1 Count of Non-Members (Medium Trips)' width='130'>
      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
      1vZ/kOo0C3DBz0AAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='3.1 Count of Non-Members (Short Trips)' width='138'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='3.1 Long Trip Non-Member Revenue' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3.1 Medium Trip Non-Member Revenue' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='3.1 Short Trip Non-Member Revenue' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='3.3 Short Trip Rental Frequency by Hour' width='192'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
      9X9dD0LZtwaBqgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
